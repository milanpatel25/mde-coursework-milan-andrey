/*
 * generated by Xtext 2.24.0
 */
parser grammar InternalGherkinParser;

options {
	tokenVocab=InternalGherkinLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package mde.coursework.gherkin.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mde.coursework.gherkin.services.GherkinGrammarAccess;

}
@members {
	private GherkinGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Backspace", "'\b'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("And", "'And'");
		tokenNameToValue.put("But", "'But'");
		tokenNameToValue.put("Then", "'Then'");
		tokenNameToValue.put("When", "'When'");
		tokenNameToValue.put("Given", "'Given'");
		tokenNameToValue.put("Rule", "'Rule:'");
		tokenNameToValue.put("Example", "'Example:'");
		tokenNameToValue.put("Feature", "'Feature:'");
		tokenNameToValue.put("Examples", "'Examples:'");
		tokenNameToValue.put("Scenario", "'Scenario:'");
		tokenNameToValue.put("Background", "'Background:'");
		tokenNameToValue.put("ScenarioOutline", "'Scenario Outline:'");
	}

	public void setGrammarAccess(GherkinGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleGherkin_Language
entryRuleGherkin_Language
:
{ before(grammarAccess.getGherkin_LanguageRule()); }
	 ruleGherkin_Language
{ after(grammarAccess.getGherkin_LanguageRule()); } 
	 EOF 
;

// Rule Gherkin_Language
ruleGherkin_Language 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGherkin_LanguageAccess().getAlternatives()); }
		(rule__Gherkin_Language__Alternatives)
		{ after(grammarAccess.getGherkin_LanguageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackground
entryRuleBackground
:
{ before(grammarAccess.getBackgroundRule()); }
	 ruleBackground
{ after(grammarAccess.getBackgroundRule()); } 
	 EOF 
;

// Rule Background
ruleBackground 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackgroundAccess().getGroup()); }
		(rule__Background__Group__0)
		{ after(grammarAccess.getBackgroundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getAlternatives()); }
		(rule__Scenario__Alternatives)
		{ after(grammarAccess.getScenarioAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNormal_Scenario
entryRuleNormal_Scenario
:
{ before(grammarAccess.getNormal_ScenarioRule()); }
	 ruleNormal_Scenario
{ after(grammarAccess.getNormal_ScenarioRule()); } 
	 EOF 
;

// Rule Normal_Scenario
ruleNormal_Scenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormal_ScenarioAccess().getGroup()); }
		(rule__Normal_Scenario__Group__0)
		{ after(grammarAccess.getNormal_ScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario_Outline
entryRuleScenario_Outline
:
{ before(grammarAccess.getScenario_OutlineRule()); }
	 ruleScenario_Outline
{ after(grammarAccess.getScenario_OutlineRule()); } 
	 EOF 
;

// Rule Scenario_Outline
ruleScenario_Outline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenario_OutlineAccess().getGroup()); }
		(rule__Scenario_Outline__Group__0)
		{ after(grammarAccess.getScenario_OutlineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExamples
entryRuleExamples
:
{ before(grammarAccess.getExamplesRule()); }
	 ruleExamples
{ after(grammarAccess.getExamplesRule()); } 
	 EOF 
;

// Rule Examples
ruleExamples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExamplesAccess().getGroup()); }
		(rule__Examples__Group__0)
		{ after(grammarAccess.getExamplesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExamples_row
entryRuleExamples_row
:
{ before(grammarAccess.getExamples_rowRule()); }
	 ruleExamples_row
{ after(grammarAccess.getExamples_rowRule()); } 
	 EOF 
;

// Rule Examples_row
ruleExamples_row 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExamples_rowAccess().getGroup()); }
		(rule__Examples_row__Group__0)
		{ after(grammarAccess.getExamples_rowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExample
entryRuleExample
:
{ before(grammarAccess.getExampleRule()); }
	 ruleExample
{ after(grammarAccess.getExampleRule()); } 
	 EOF 
;

// Rule Example
ruleExample 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExampleAccess().getGroup()); }
		(rule__Example__Group__0)
		{ after(grammarAccess.getExampleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChain_Steps
entryRuleChain_Steps
:
{ before(grammarAccess.getChain_StepsRule()); }
	 ruleChain_Steps
{ after(grammarAccess.getChain_StepsRule()); } 
	 EOF 
;

// Rule Chain_Steps
ruleChain_Steps 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChain_StepsAccess().getGroup()); }
		(rule__Chain_Steps__Group__0)
		{ after(grammarAccess.getChain_StepsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSteps
entryRuleSteps
:
{ before(grammarAccess.getStepsRule()); }
	 ruleSteps
{ after(grammarAccess.getStepsRule()); } 
	 EOF 
;

// Rule Steps
ruleSteps 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepsAccess().getAlternatives()); }
		(rule__Steps__Alternatives)
		{ after(grammarAccess.getStepsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven_Statement
entryRuleGiven_Statement
:
{ before(grammarAccess.getGiven_StatementRule()); }
	 ruleGiven_Statement
{ after(grammarAccess.getGiven_StatementRule()); } 
	 EOF 
;

// Rule Given_Statement
ruleGiven_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGiven_StatementAccess().getGroup()); }
		(rule__Given_Statement__Group__0)
		{ after(grammarAccess.getGiven_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhen_Statement
entryRuleWhen_Statement
:
{ before(grammarAccess.getWhen_StatementRule()); }
	 ruleWhen_Statement
{ after(grammarAccess.getWhen_StatementRule()); } 
	 EOF 
;

// Rule When_Statement
ruleWhen_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhen_StatementAccess().getGroup()); }
		(rule__When_Statement__Group__0)
		{ after(grammarAccess.getWhen_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen_Statement
entryRuleThen_Statement
:
{ before(grammarAccess.getThen_StatementRule()); }
	 ruleThen_Statement
{ after(grammarAccess.getThen_StatementRule()); } 
	 EOF 
;

// Rule Then_Statement
ruleThen_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThen_StatementAccess().getGroup()); }
		(rule__Then_Statement__Group__0)
		{ after(grammarAccess.getThen_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBut_Statement
entryRuleBut_Statement
:
{ before(grammarAccess.getBut_StatementRule()); }
	 ruleBut_Statement
{ after(grammarAccess.getBut_StatementRule()); } 
	 EOF 
;

// Rule But_Statement
ruleBut_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBut_StatementAccess().getGroup()); }
		(rule__But_Statement__Group__0)
		{ after(grammarAccess.getBut_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd_Statement
entryRuleAnd_Statement
:
{ before(grammarAccess.getAnd_StatementRule()); }
	 ruleAnd_Statement
{ after(grammarAccess.getAnd_StatementRule()); } 
	 EOF 
;

// Rule And_Statement
ruleAnd_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_StatementAccess().getGroup()); }
		(rule__And_Statement__Group__0)
		{ after(grammarAccess.getAnd_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStar_Statement
entryRuleStar_Statement
:
{ before(grammarAccess.getStar_StatementRule()); }
	 ruleStar_Statement
{ after(grammarAccess.getStar_StatementRule()); } 
	 EOF 
;

// Rule Star_Statement
ruleStar_Statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStar_StatementAccess().getGroup()); }
		(rule__Star_Statement__Group__0)
		{ after(grammarAccess.getStar_StatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getAlternatives()); }
		(rule__Sentence__Alternatives)
		{ after(grammarAccess.getSentenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gherkin_Language__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGherkin_LanguageAccess().getFeaturesAssignment_0()); }
		(rule__Gherkin_Language__FeaturesAssignment_0)*
		{ after(grammarAccess.getGherkin_LanguageAccess().getFeaturesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGherkin_LanguageAccess().getRulesAssignment_1()); }
		(rule__Gherkin_Language__RulesAssignment_1)*
		{ after(grammarAccess.getGherkin_LanguageAccess().getRulesAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNormal_ScenarioParserRuleCall_0()); }
		ruleNormal_Scenario
		{ after(grammarAccess.getScenarioAccess().getNormal_ScenarioParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getScenarioAccess().getScenario_OutlineParserRuleCall_1()); }
		ruleScenario_Outline
		{ after(grammarAccess.getScenarioAccess().getScenario_OutlineParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getGiven_stepAssignment_0()); }
		(rule__Steps__Given_stepAssignment_0)
		{ after(grammarAccess.getStepsAccess().getGiven_stepAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getWhen_stepAssignment_1()); }
		(rule__Steps__When_stepAssignment_1)
		{ after(grammarAccess.getStepsAccess().getWhen_stepAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getBut_stepAssignment_2()); }
		(rule__Steps__But_stepAssignment_2)
		{ after(grammarAccess.getStepsAccess().getBut_stepAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getThen_stepAssignment_3()); }
		(rule__Steps__Then_stepAssignment_3)
		{ after(grammarAccess.getStepsAccess().getThen_stepAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getAnd_stepAssignment_4()); }
		(rule__Steps__And_stepAssignment_4)
		{ after(grammarAccess.getStepsAccess().getAnd_stepAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStepsAccess().getStar_stepAssignment_5()); }
		(rule__Steps__Star_stepAssignment_5)
		{ after(grammarAccess.getStepsAccess().getStar_stepAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSentenceAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getBackspaceKeyword_1()); }
		Backspace
		{ after(grammarAccess.getSentenceAccess().getBackspaceKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getSentenceAccess().getSTRINGTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
	Feature
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getDescriptionParserRuleCall_1()); }
	ruleDescription
	{ after(grammarAccess.getFeatureAccess().getDescriptionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_2()); }
	(rule__Feature__Group_2__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__0__Impl
	rule__Feature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getBEGINTerminalRuleCall_2_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getFeatureAccess().getBEGINTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__1__Impl
	rule__Feature__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeature_backgroundAssignment_2_1()); }
	(rule__Feature__Feature_backgroundAssignment_2_1)?
	{ after(grammarAccess.getFeatureAccess().getFeature_backgroundAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__2__Impl
	rule__Feature__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeatureAccess().getScenariosAssignment_2_2()); }
		(rule__Feature__ScenariosAssignment_2_2)
		{ after(grammarAccess.getFeatureAccess().getScenariosAssignment_2_2()); }
	)
	(
		{ before(grammarAccess.getFeatureAccess().getScenariosAssignment_2_2()); }
		(rule__Feature__ScenariosAssignment_2_2)*
		{ after(grammarAccess.getFeatureAccess().getScenariosAssignment_2_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getENDTerminalRuleCall_2_3()); }
	RULE_END
	{ after(grammarAccess.getFeatureAccess().getENDTerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Background__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__0__Impl
	rule__Background__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getTitleAssignment_0()); }
	(rule__Background__TitleAssignment_0)
	{ after(grammarAccess.getBackgroundAccess().getTitleAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getGroup_1()); }
	(rule__Background__Group_1__0)
	{ after(grammarAccess.getBackgroundAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Background__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group_1__0__Impl
	rule__Background__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getBEGINTerminalRuleCall_1_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getBackgroundAccess().getBEGINTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group_1__1__Impl
	rule__Background__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getBackground_StepsAssignment_1_1()); }
	(rule__Background__Background_StepsAssignment_1_1)*
	{ after(grammarAccess.getBackgroundAccess().getBackground_StepsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getENDTerminalRuleCall_1_2()); }
	RULE_END
	{ after(grammarAccess.getBackgroundAccess().getENDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Normal_Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Normal_Scenario__Group__0__Impl
	rule__Normal_Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormal_ScenarioAccess().getScenarioKeyword_0()); }
	Scenario
	{ after(grammarAccess.getNormal_ScenarioAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Normal_Scenario__Group__1__Impl
	rule__Normal_Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormal_ScenarioAccess().getDescriptionParserRuleCall_1()); }
	ruleDescription
	{ after(grammarAccess.getNormal_ScenarioAccess().getDescriptionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Normal_Scenario__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormal_ScenarioAccess().getScenario_stepsAssignment_2()); }
	(rule__Normal_Scenario__Scenario_stepsAssignment_2)
	{ after(grammarAccess.getNormal_ScenarioAccess().getScenario_stepsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario_Outline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group__0__Impl
	rule__Scenario_Outline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getScenarioOutlineKeyword_0()); }
	ScenarioOutline
	{ after(grammarAccess.getScenario_OutlineAccess().getScenarioOutlineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group__1__Impl
	rule__Scenario_Outline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getDescriptionParserRuleCall_1()); }
	ruleDescription
	{ after(grammarAccess.getScenario_OutlineAccess().getDescriptionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getGroup_2()); }
	(rule__Scenario_Outline__Group_2__0)
	{ after(grammarAccess.getScenario_OutlineAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario_Outline__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group_2__0__Impl
	rule__Scenario_Outline__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getBEGINTerminalRuleCall_2_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getScenario_OutlineAccess().getBEGINTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group_2__1__Impl
	rule__Scenario_Outline__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getStepsAssignment_2_1()); }
	(rule__Scenario_Outline__StepsAssignment_2_1)*
	{ after(grammarAccess.getScenario_OutlineAccess().getStepsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group_2__2__Impl
	rule__Scenario_Outline__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getExampleAssignment_2_2()); }
	(rule__Scenario_Outline__ExampleAssignment_2_2)
	{ after(grammarAccess.getScenario_OutlineAccess().getExampleAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario_Outline__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenario_OutlineAccess().getENDTerminalRuleCall_2_3()); }
	RULE_END
	{ after(grammarAccess.getScenario_OutlineAccess().getENDTerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__0__Impl
	rule__Examples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getExamplesAction_0()); }
	()
	{ after(grammarAccess.getExamplesAccess().getExamplesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__1__Impl
	rule__Examples__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getExamplesKeyword_1()); }
	Examples
	{ after(grammarAccess.getExamplesAccess().getExamplesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getGroup_2()); }
	(rule__Examples__Group_2__0)
	{ after(grammarAccess.getExamplesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group_2__0__Impl
	rule__Examples__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getBEGINTerminalRuleCall_2_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getExamplesAccess().getBEGINTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group_2__1__Impl
	rule__Examples__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getExamplesAccess().getRowsAssignment_2_1()); }
		(rule__Examples__RowsAssignment_2_1)
		{ after(grammarAccess.getExamplesAccess().getRowsAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getExamplesAccess().getRowsAssignment_2_1()); }
		(rule__Examples__RowsAssignment_2_1)*
		{ after(grammarAccess.getExamplesAccess().getRowsAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getENDTerminalRuleCall_2_2()); }
	RULE_END
	{ after(grammarAccess.getExamplesAccess().getENDTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples_row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples_row__Group__0__Impl
	rule__Examples_row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getExamples_rowAccess().getGroup_0()); }
		(rule__Examples_row__Group_0__0)
		{ after(grammarAccess.getExamples_rowAccess().getGroup_0()); }
	)
	(
		{ before(grammarAccess.getExamples_rowAccess().getGroup_0()); }
		(rule__Examples_row__Group_0__0)*
		{ after(grammarAccess.getExamples_rowAccess().getGroup_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples_row__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_1()); }
	VerticalLine
	{ after(grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples_row__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples_row__Group_0__0__Impl
	rule__Examples_row__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_0_0()); }
	VerticalLine
	{ after(grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples_row__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples_row__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamples_rowAccess().getIDTerminalRuleCall_0_1()); }
	RULE_ID
	{ after(grammarAccess.getExamples_rowAccess().getIDTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	Rule
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDescriptionParserRuleCall_1()); }
	ruleDescription
	{ after(grammarAccess.getRuleAccess().getDescriptionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_2()); }
	(rule__Rule__Group_2__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__0__Impl
	rule__Rule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBEGINTerminalRuleCall_2_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getRuleAccess().getBEGINTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__1__Impl
	rule__Rule__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBackgroundAssignment_2_1()); }
	(rule__Rule__BackgroundAssignment_2_1)?
	{ after(grammarAccess.getRuleAccess().getBackgroundAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__2__Impl
	rule__Rule__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getExamplesAssignment_2_2()); }
		(rule__Rule__ExamplesAssignment_2_2)
		{ after(grammarAccess.getRuleAccess().getExamplesAssignment_2_2()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getExamplesAssignment_2_2()); }
		(rule__Rule__ExamplesAssignment_2_2)*
		{ after(grammarAccess.getRuleAccess().getExamplesAssignment_2_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getENDTerminalRuleCall_2_3()); }
	RULE_END
	{ after(grammarAccess.getRuleAccess().getENDTerminalRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Example__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Example__Group__0__Impl
	rule__Example__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExampleAccess().getExampleKeyword_0()); }
	Example
	{ after(grammarAccess.getExampleAccess().getExampleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Example__Group__1__Impl
	rule__Example__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExampleAccess().getDescriptionParserRuleCall_1()); }
	ruleDescription
	{ after(grammarAccess.getExampleAccess().getDescriptionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Example__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExampleAccess().getExample_stepsAssignment_2()); }
	(rule__Example__Example_stepsAssignment_2)
	{ after(grammarAccess.getExampleAccess().getExample_stepsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chain_Steps__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain_Steps__Group__0__Impl
	rule__Chain_Steps__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChain_StepsAccess().getChain_StepsAction_0()); }
	()
	{ after(grammarAccess.getChain_StepsAccess().getChain_StepsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain_Steps__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChain_StepsAccess().getGroup_1()); }
	(rule__Chain_Steps__Group_1__0)
	{ after(grammarAccess.getChain_StepsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chain_Steps__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain_Steps__Group_1__0__Impl
	rule__Chain_Steps__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChain_StepsAccess().getBEGINTerminalRuleCall_1_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getChain_StepsAccess().getBEGINTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain_Steps__Group_1__1__Impl
	rule__Chain_Steps__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChain_StepsAccess().getChainAssignment_1_1()); }
	(rule__Chain_Steps__ChainAssignment_1_1)*
	{ after(grammarAccess.getChain_StepsAccess().getChainAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chain_Steps__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChain_StepsAccess().getENDTerminalRuleCall_1_2()); }
	RULE_END
	{ after(grammarAccess.getChain_StepsAccess().getENDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given_Statement__Group__0__Impl
	rule__Given_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGiven_StatementAccess().getGivenKeyword_0()); }
	Given
	{ after(grammarAccess.getGiven_StatementAccess().getGivenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGiven_StatementAccess().getDescAssignment_1()); }
	(rule__Given_Statement__DescAssignment_1)
	{ after(grammarAccess.getGiven_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__When_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When_Statement__Group__0__Impl
	rule__When_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhen_StatementAccess().getWhenKeyword_0()); }
	When
	{ after(grammarAccess.getWhen_StatementAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhen_StatementAccess().getDescAssignment_1()); }
	(rule__When_Statement__DescAssignment_1)
	{ after(grammarAccess.getWhen_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then_Statement__Group__0__Impl
	rule__Then_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThen_StatementAccess().getThenKeyword_0()); }
	Then
	{ after(grammarAccess.getThen_StatementAccess().getThenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThen_StatementAccess().getDescAssignment_1()); }
	(rule__Then_Statement__DescAssignment_1)
	{ after(grammarAccess.getThen_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__But_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But_Statement__Group__0__Impl
	rule__But_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__But_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBut_StatementAccess().getButKeyword_0()); }
	But
	{ after(grammarAccess.getBut_StatementAccess().getButKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__But_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__But_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__But_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBut_StatementAccess().getDescAssignment_1()); }
	(rule__But_Statement__DescAssignment_1)
	{ after(grammarAccess.getBut_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Statement__Group__0__Impl
	rule__And_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_StatementAccess().getAndKeyword_0()); }
	And
	{ after(grammarAccess.getAnd_StatementAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_StatementAccess().getDescAssignment_1()); }
	(rule__And_Statement__DescAssignment_1)
	{ after(grammarAccess.getAnd_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Star_Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Star_Statement__Group__0__Impl
	rule__Star_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Star_Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStar_StatementAccess().getAsteriskKeyword_0()); }
	Asterisk
	{ after(grammarAccess.getStar_StatementAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Star_Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Star_Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Star_Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStar_StatementAccess().getDescAssignment_1()); }
	(rule__Star_Statement__DescAssignment_1)
	{ after(grammarAccess.getStar_StatementAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionAction_0()); }
	()
	{ after(grammarAccess.getDescriptionAccess().getDescriptionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescAssignment_1()); }
	(rule__Description__DescAssignment_1)*
	{ after(grammarAccess.getDescriptionAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gherkin_Language__FeaturesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGherkin_LanguageAccess().getFeaturesFeatureParserRuleCall_0_0()); }
		ruleFeature
		{ after(grammarAccess.getGherkin_LanguageAccess().getFeaturesFeatureParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gherkin_Language__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGherkin_LanguageAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getGherkin_LanguageAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Feature_backgroundAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getFeature_backgroundBackgroundParserRuleCall_2_1_0()); }
		ruleBackground
		{ after(grammarAccess.getFeatureAccess().getFeature_backgroundBackgroundParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__ScenariosAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_2_2_0()); }
		ruleScenario
		{ after(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__TitleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getTitleBackgroundKeyword_0_0()); }
		(
			{ before(grammarAccess.getBackgroundAccess().getTitleBackgroundKeyword_0_0()); }
			Background
			{ after(grammarAccess.getBackgroundAccess().getTitleBackgroundKeyword_0_0()); }
		)
		{ after(grammarAccess.getBackgroundAccess().getTitleBackgroundKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Background_StepsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getBackground_StepsStepsParserRuleCall_1_1_0()); }
		ruleSteps
		{ after(grammarAccess.getBackgroundAccess().getBackground_StepsStepsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal_Scenario__Scenario_stepsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormal_ScenarioAccess().getScenario_stepsChain_StepsParserRuleCall_2_0()); }
		ruleChain_Steps
		{ after(grammarAccess.getNormal_ScenarioAccess().getScenario_stepsChain_StepsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__StepsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenario_OutlineAccess().getStepsStepsParserRuleCall_2_1_0()); }
		ruleSteps
		{ after(grammarAccess.getScenario_OutlineAccess().getStepsStepsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario_Outline__ExampleAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenario_OutlineAccess().getExampleExamplesParserRuleCall_2_2_0()); }
		ruleExamples
		{ after(grammarAccess.getScenario_OutlineAccess().getExampleExamplesParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__RowsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getRowsExamples_rowParserRuleCall_2_1_0()); }
		ruleExamples_row
		{ after(grammarAccess.getExamplesAccess().getRowsExamples_rowParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__BackgroundAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getBackgroundBackgroundParserRuleCall_2_1_0()); }
		ruleBackground
		{ after(grammarAccess.getRuleAccess().getBackgroundBackgroundParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ExamplesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getExamplesExampleParserRuleCall_2_2_0()); }
		ruleExample
		{ after(grammarAccess.getRuleAccess().getExamplesExampleParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Example__Example_stepsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExampleAccess().getExample_stepsChain_StepsParserRuleCall_2_0()); }
		ruleChain_Steps
		{ after(grammarAccess.getExampleAccess().getExample_stepsChain_StepsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain_Steps__ChainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChain_StepsAccess().getChainStepsParserRuleCall_1_1_0()); }
		ruleSteps
		{ after(grammarAccess.getChain_StepsAccess().getChainStepsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Given_stepAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getGiven_stepGiven_StatementParserRuleCall_0_0()); }
		ruleGiven_Statement
		{ after(grammarAccess.getStepsAccess().getGiven_stepGiven_StatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__When_stepAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getWhen_stepWhen_StatementParserRuleCall_1_0()); }
		ruleWhen_Statement
		{ after(grammarAccess.getStepsAccess().getWhen_stepWhen_StatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__But_stepAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getBut_stepBut_StatementParserRuleCall_2_0()); }
		ruleBut_Statement
		{ after(grammarAccess.getStepsAccess().getBut_stepBut_StatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Then_stepAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getThen_stepThen_StatementParserRuleCall_3_0()); }
		ruleThen_Statement
		{ after(grammarAccess.getStepsAccess().getThen_stepThen_StatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__And_stepAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getAnd_stepAnd_StatementParserRuleCall_4_0()); }
		ruleAnd_Statement
		{ after(grammarAccess.getStepsAccess().getAnd_stepAnd_StatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Steps__Star_stepAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepsAccess().getStar_stepStar_StatementParserRuleCall_5_0()); }
		ruleStar_Statement
		{ after(grammarAccess.getStepsAccess().getStar_stepStar_StatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGiven_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getGiven_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhen_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getWhen_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThen_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getThen_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__But_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBut_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getBut_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getAnd_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Star_Statement__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStar_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
		ruleDescription
		{ after(grammarAccess.getStar_StatementAccess().getDescDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getDescSentenceParserRuleCall_1_0()); }
		ruleSentence
		{ after(grammarAccess.getDescriptionAccess().getDescSentenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
