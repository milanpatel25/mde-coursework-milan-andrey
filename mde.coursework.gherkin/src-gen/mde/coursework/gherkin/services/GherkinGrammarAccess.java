/*
 * generated by Xtext 2.24.0
 */
package mde.coursework.gherkin.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GherkinGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class Gherkin_LanguageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Gherkin_Language");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cFeaturesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cFeaturesFeatureParserRuleCall_0_0 = (RuleCall)cFeaturesAssignment_0.eContents().get(0);
		private final Assignment cRulesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_1_0 = (RuleCall)cRulesAssignment_1.eContents().get(0);
		
		//Gherkin_Language:
		//	features+=Feature* | rules+=Rule*;
		@Override public ParserRule getRule() { return rule; }
		
		//features+=Feature* | rules+=Rule*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//features+=Feature*
		public Assignment getFeaturesAssignment_0() { return cFeaturesAssignment_0; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_0_0() { return cFeaturesFeatureParserRuleCall_0_0; }
		
		//rules+=Rule*
		public Assignment getRulesAssignment_1() { return cRulesAssignment_1; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_1_0() { return cRulesRuleParserRuleCall_1_0; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cDescriptionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cFeature_backgroundAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFeature_backgroundBackgroundParserRuleCall_2_1_0 = (RuleCall)cFeature_backgroundAssignment_2_1.eContents().get(0);
		private final Assignment cScenariosAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cScenariosScenarioParserRuleCall_2_2_0 = (RuleCall)cScenariosAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Feature:
		//	"Feature:" Description (BEGIN
		//	feature_background=Background?
		//	scenarios+=Scenario+
		//	END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//"Feature:" Description (BEGIN
		//feature_background=Background?
		//scenarios+=Scenario+
		//END)?
		public Group getGroup() { return cGroup; }
		
		//"Feature:"
		public Keyword getFeatureKeyword_0() { return cFeatureKeyword_0; }
		
		//Description
		public RuleCall getDescriptionParserRuleCall_1() { return cDescriptionParserRuleCall_1; }
		
		//(BEGIN
		//feature_background=Background?
		//scenarios+=Scenario+
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//feature_background=Background?
		public Assignment getFeature_backgroundAssignment_2_1() { return cFeature_backgroundAssignment_2_1; }
		
		//Background
		public RuleCall getFeature_backgroundBackgroundParserRuleCall_2_1_0() { return cFeature_backgroundBackgroundParserRuleCall_2_1_0; }
		
		//scenarios+=Scenario+
		public Assignment getScenariosAssignment_2_2() { return cScenariosAssignment_2_2; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_2_2_0() { return cScenariosScenarioParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class BackgroundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Background");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTitleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTitleBackgroundKeyword_0_0 = (Keyword)cTitleAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cBackground_StepsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cBackground_StepsStepsParserRuleCall_1_1_0 = (RuleCall)cBackground_StepsAssignment_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//Background:
		//	title="Background:" (BEGIN
		//	background_Steps+=Steps*
		//	END);
		@Override public ParserRule getRule() { return rule; }
		
		//title="Background:" (BEGIN
		//background_Steps+=Steps*
		//END)
		public Group getGroup() { return cGroup; }
		
		//title="Background:"
		public Assignment getTitleAssignment_0() { return cTitleAssignment_0; }
		
		//"Background:"
		public Keyword getTitleBackgroundKeyword_0_0() { return cTitleBackgroundKeyword_0_0; }
		
		//(BEGIN
		//background_Steps+=Steps*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//background_Steps+=Steps*
		public Assignment getBackground_StepsAssignment_1_1() { return cBackground_StepsAssignment_1_1; }
		
		//Steps
		public RuleCall getBackground_StepsStepsParserRuleCall_1_1_0() { return cBackground_StepsStepsParserRuleCall_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2() { return cENDTerminalRuleCall_1_2; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Scenario");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNormal_ScenarioParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cScenario_OutlineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Scenario:
		//	Normal_Scenario | Scenario_Outline;
		@Override public ParserRule getRule() { return rule; }
		
		//Normal_Scenario | Scenario_Outline
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Normal_Scenario
		public RuleCall getNormal_ScenarioParserRuleCall_0() { return cNormal_ScenarioParserRuleCall_0; }
		
		//Scenario_Outline
		public RuleCall getScenario_OutlineParserRuleCall_1() { return cScenario_OutlineParserRuleCall_1; }
	}
	public class Normal_ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Normal_Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cDescriptionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cScenario_stepsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cScenario_stepsChain_StepsParserRuleCall_2_0 = (RuleCall)cScenario_stepsAssignment_2.eContents().get(0);
		
		//Normal_Scenario:
		//	"Scenario:" Description
		//	scenario_steps=Chain_Steps;
		@Override public ParserRule getRule() { return rule; }
		
		//"Scenario:" Description
		//scenario_steps=Chain_Steps
		public Group getGroup() { return cGroup; }
		
		//"Scenario:"
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }
		
		//Description
		public RuleCall getDescriptionParserRuleCall_1() { return cDescriptionParserRuleCall_1; }
		
		//scenario_steps=Chain_Steps
		public Assignment getScenario_stepsAssignment_2() { return cScenario_stepsAssignment_2; }
		
		//Chain_Steps
		public RuleCall getScenario_stepsChain_StepsParserRuleCall_2_0() { return cScenario_stepsChain_StepsParserRuleCall_2_0; }
	}
	public class Scenario_OutlineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Scenario_Outline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioOutlineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cDescriptionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cStepsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStepsStepsParserRuleCall_2_1_0 = (RuleCall)cStepsAssignment_2_1.eContents().get(0);
		private final Assignment cExampleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cExampleExamplesParserRuleCall_2_2_0 = (RuleCall)cExampleAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Scenario_Outline:
		//	"Scenario Outline:" Description (BEGIN
		//	steps+=Steps*
		//	example=Examples
		//	END);
		@Override public ParserRule getRule() { return rule; }
		
		//"Scenario Outline:" Description (BEGIN
		//steps+=Steps*
		//example=Examples
		//END)
		public Group getGroup() { return cGroup; }
		
		//"Scenario Outline:"
		public Keyword getScenarioOutlineKeyword_0() { return cScenarioOutlineKeyword_0; }
		
		//Description
		public RuleCall getDescriptionParserRuleCall_1() { return cDescriptionParserRuleCall_1; }
		
		//(BEGIN
		//steps+=Steps*
		//example=Examples
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//steps+=Steps*
		public Assignment getStepsAssignment_2_1() { return cStepsAssignment_2_1; }
		
		//Steps
		public RuleCall getStepsStepsParserRuleCall_2_1_0() { return cStepsStepsParserRuleCall_2_1_0; }
		
		//example=Examples
		public Assignment getExampleAssignment_2_2() { return cExampleAssignment_2_2; }
		
		//Examples
		public RuleCall getExampleExamplesParserRuleCall_2_2_0() { return cExampleExamplesParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class ExamplesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Examples");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExamplesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExamplesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cRowsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRowsExamples_rowParserRuleCall_2_1_0 = (RuleCall)cRowsAssignment_2_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//Examples:
		//	{Examples}
		//	"Examples:" (BEGIN
		//	rows+=Examples_row+
		//	END);
		@Override public ParserRule getRule() { return rule; }
		
		//{Examples}
		//"Examples:" (BEGIN
		//rows+=Examples_row+
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Examples}
		public Action getExamplesAction_0() { return cExamplesAction_0; }
		
		//"Examples:"
		public Keyword getExamplesKeyword_1() { return cExamplesKeyword_1; }
		
		//(BEGIN
		//rows+=Examples_row+
		//END)
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//rows+=Examples_row+
		public Assignment getRowsAssignment_2_1() { return cRowsAssignment_2_1; }
		
		//Examples_row
		public RuleCall getRowsExamples_rowParserRuleCall_2_1_0() { return cRowsExamples_rowParserRuleCall_2_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_2() { return cENDTerminalRuleCall_2_2; }
	}
	public class Examples_rowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Examples_row");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cVerticalLineKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cVerticalLineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Examples_row:
		//	("|" ID)+ "|";
		@Override public ParserRule getRule() { return rule; }
		
		//("|" ID)+ "|"
		public Group getGroup() { return cGroup; }
		
		//("|" ID)+
		public Group getGroup_0() { return cGroup_0; }
		
		//"|"
		public Keyword getVerticalLineKeyword_0_0() { return cVerticalLineKeyword_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_1() { return cIDTerminalRuleCall_0_1; }
		
		//"|"
		public Keyword getVerticalLineKeyword_1() { return cVerticalLineKeyword_1; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cDescriptionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cBackgroundAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBackgroundBackgroundParserRuleCall_2_1_0 = (RuleCall)cBackgroundAssignment_2_1.eContents().get(0);
		private final Assignment cExamplesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cExamplesExampleParserRuleCall_2_2_0 = (RuleCall)cExamplesAssignment_2_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//Rule:
		//	"Rule:" Description (BEGIN
		//	background=Background?
		//	examples+=Example+
		//	END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//"Rule:" Description (BEGIN
		//background=Background?
		//examples+=Example+
		//END)?
		public Group getGroup() { return cGroup; }
		
		//"Rule:"
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//Description
		public RuleCall getDescriptionParserRuleCall_1() { return cDescriptionParserRuleCall_1; }
		
		//(BEGIN
		//background=Background?
		//examples+=Example+
		//END)?
		public Group getGroup_2() { return cGroup_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2_0() { return cBEGINTerminalRuleCall_2_0; }
		
		//background=Background?
		public Assignment getBackgroundAssignment_2_1() { return cBackgroundAssignment_2_1; }
		
		//Background
		public RuleCall getBackgroundBackgroundParserRuleCall_2_1_0() { return cBackgroundBackgroundParserRuleCall_2_1_0; }
		
		//examples+=Example+
		public Assignment getExamplesAssignment_2_2() { return cExamplesAssignment_2_2; }
		
		//Example
		public RuleCall getExamplesExampleParserRuleCall_2_2_0() { return cExamplesExampleParserRuleCall_2_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2_3() { return cENDTerminalRuleCall_2_3; }
	}
	public class ExampleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Example");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExampleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cDescriptionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cExample_stepsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExample_stepsChain_StepsParserRuleCall_2_0 = (RuleCall)cExample_stepsAssignment_2.eContents().get(0);
		
		//Example:
		//	"Example:" Description
		//	example_steps=Chain_Steps;
		@Override public ParserRule getRule() { return rule; }
		
		//"Example:" Description
		//example_steps=Chain_Steps
		public Group getGroup() { return cGroup; }
		
		//"Example:"
		public Keyword getExampleKeyword_0() { return cExampleKeyword_0; }
		
		//Description
		public RuleCall getDescriptionParserRuleCall_1() { return cDescriptionParserRuleCall_1; }
		
		//example_steps=Chain_Steps
		public Assignment getExample_stepsAssignment_2() { return cExample_stepsAssignment_2; }
		
		//Chain_Steps
		public RuleCall getExample_stepsChain_StepsParserRuleCall_2_0() { return cExample_stepsChain_StepsParserRuleCall_2_0; }
	}
	public class Chain_StepsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Chain_Steps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cChain_StepsAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cChainAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cChainStepsParserRuleCall_1_1_0 = (RuleCall)cChainAssignment_1_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//Chain_Steps:
		//	{Chain_Steps} (BEGIN
		//	chain+=Steps*
		//	END);
		@Override public ParserRule getRule() { return rule; }
		
		//{Chain_Steps} (BEGIN
		//chain+=Steps*
		//END)
		public Group getGroup() { return cGroup; }
		
		//{Chain_Steps}
		public Action getChain_StepsAction_0() { return cChain_StepsAction_0; }
		
		//(BEGIN
		//chain+=Steps*
		//END)
		public Group getGroup_1() { return cGroup_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_0() { return cBEGINTerminalRuleCall_1_0; }
		
		//chain+=Steps*
		public Assignment getChainAssignment_1_1() { return cChainAssignment_1_1; }
		
		//Steps
		public RuleCall getChainStepsParserRuleCall_1_1_0() { return cChainStepsParserRuleCall_1_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_2() { return cENDTerminalRuleCall_1_2; }
	}
	public class StepsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Steps");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cGiven_stepAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cGiven_stepGiven_StatementParserRuleCall_0_0 = (RuleCall)cGiven_stepAssignment_0.eContents().get(0);
		private final Assignment cWhen_stepAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cWhen_stepWhen_StatementParserRuleCall_1_0 = (RuleCall)cWhen_stepAssignment_1.eContents().get(0);
		private final Assignment cBut_stepAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cBut_stepBut_StatementParserRuleCall_2_0 = (RuleCall)cBut_stepAssignment_2.eContents().get(0);
		private final Assignment cThen_stepAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cThen_stepThen_StatementParserRuleCall_3_0 = (RuleCall)cThen_stepAssignment_3.eContents().get(0);
		private final Assignment cAnd_stepAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cAnd_stepAnd_StatementParserRuleCall_4_0 = (RuleCall)cAnd_stepAssignment_4.eContents().get(0);
		private final Assignment cStar_stepAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cStar_stepStar_StatementParserRuleCall_5_0 = (RuleCall)cStar_stepAssignment_5.eContents().get(0);
		
		//Steps:
		//	given_step=Given_Statement | when_step=When_Statement | but_step=But_Statement | then_step=Then_Statement |
		//	and_step=And_Statement | star_step=Star_Statement;
		@Override public ParserRule getRule() { return rule; }
		
		//given_step=Given_Statement | when_step=When_Statement | but_step=But_Statement | then_step=Then_Statement |
		//and_step=And_Statement | star_step=Star_Statement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//given_step=Given_Statement
		public Assignment getGiven_stepAssignment_0() { return cGiven_stepAssignment_0; }
		
		//Given_Statement
		public RuleCall getGiven_stepGiven_StatementParserRuleCall_0_0() { return cGiven_stepGiven_StatementParserRuleCall_0_0; }
		
		//when_step=When_Statement
		public Assignment getWhen_stepAssignment_1() { return cWhen_stepAssignment_1; }
		
		//When_Statement
		public RuleCall getWhen_stepWhen_StatementParserRuleCall_1_0() { return cWhen_stepWhen_StatementParserRuleCall_1_0; }
		
		//but_step=But_Statement
		public Assignment getBut_stepAssignment_2() { return cBut_stepAssignment_2; }
		
		//But_Statement
		public RuleCall getBut_stepBut_StatementParserRuleCall_2_0() { return cBut_stepBut_StatementParserRuleCall_2_0; }
		
		//then_step=Then_Statement
		public Assignment getThen_stepAssignment_3() { return cThen_stepAssignment_3; }
		
		//Then_Statement
		public RuleCall getThen_stepThen_StatementParserRuleCall_3_0() { return cThen_stepThen_StatementParserRuleCall_3_0; }
		
		//and_step=And_Statement
		public Assignment getAnd_stepAssignment_4() { return cAnd_stepAssignment_4; }
		
		//And_Statement
		public RuleCall getAnd_stepAnd_StatementParserRuleCall_4_0() { return cAnd_stepAnd_StatementParserRuleCall_4_0; }
		
		//star_step=Star_Statement
		public Assignment getStar_stepAssignment_5() { return cStar_stepAssignment_5; }
		
		//Star_Statement
		public RuleCall getStar_stepStar_StatementParserRuleCall_5_0() { return cStar_stepStar_StatementParserRuleCall_5_0; }
	}
	public class Given_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Given_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGivenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//Given_Statement:
		//	"Given" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"Given" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"Given"
		public Keyword getGivenKeyword_0() { return cGivenKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class When_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.When_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//When_Statement:
		//	"When" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"When" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"When"
		public Keyword getWhenKeyword_0() { return cWhenKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class Then_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Then_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//Then_Statement:
		//	"Then" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"Then" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"Then"
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class But_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.But_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//But_Statement:
		//	"But" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"But" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"But"
		public Keyword getButKeyword_0() { return cButKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class And_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.And_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//And_Statement:
		//	"And" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"And" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"And"
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class Star_StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Star_Statement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescDescriptionParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//Star_Statement:
		//	"*" desc=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//"*" desc=Description
		public Group getGroup() { return cGroup; }
		
		//"*"
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//desc=Description
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Description
		public RuleCall getDescDescriptionParserRuleCall_1_0() { return cDescDescriptionParserRuleCall_1_0; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDescriptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescSentenceParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//Description:
		//	{Description} desc+=Sentence*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Description} desc+=Sentence*
		public Group getGroup() { return cGroup; }
		
		//{Description}
		public Action getDescriptionAction_0() { return cDescriptionAction_0; }
		
		//desc+=Sentence*
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Sentence
		public RuleCall getDescSentenceParserRuleCall_1_0() { return cDescSentenceParserRuleCall_1_0; }
	}
	public class SentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Sent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSentAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDescAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescSentenceParserRuleCall_1_0 = (RuleCall)cDescAssignment_1.eContents().get(0);
		
		//Sent:
		//	{Sent} desc+=Sentence*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Sent} desc+=Sentence*
		public Group getGroup() { return cGroup; }
		
		//{Sent}
		public Action getSentAction_0() { return cSentAction_0; }
		
		//desc+=Sentence*
		public Assignment getDescAssignment_1() { return cDescAssignment_1; }
		
		//Sentence
		public RuleCall getDescSentenceParserRuleCall_1_0() { return cDescSentenceParserRuleCall_1_0; }
	}
	public class SentenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.Sentence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cBackspaceKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Sentence:
		//	ID | "\b" | STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | "\b" | STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//"\b"
		public Keyword getBackspaceKeyword_1() { return cBackspaceKeyword_1; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}
	
	
	private final Gherkin_LanguageElements pGherkin_Language;
	private final FeatureElements pFeature;
	private final BackgroundElements pBackground;
	private final ScenarioElements pScenario;
	private final Normal_ScenarioElements pNormal_Scenario;
	private final Scenario_OutlineElements pScenario_Outline;
	private final ExamplesElements pExamples;
	private final Examples_rowElements pExamples_row;
	private final RuleElements pRule;
	private final ExampleElements pExample;
	private final Chain_StepsElements pChain_Steps;
	private final StepsElements pSteps;
	private final Given_StatementElements pGiven_Statement;
	private final When_StatementElements pWhen_Statement;
	private final Then_StatementElements pThen_Statement;
	private final But_StatementElements pBut_Statement;
	private final And_StatementElements pAnd_Statement;
	private final Star_StatementElements pStar_Statement;
	private final DescriptionElements pDescription;
	private final SentElements pSent;
	private final SentenceElements pSentence;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GherkinGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGherkin_Language = new Gherkin_LanguageElements();
		this.pFeature = new FeatureElements();
		this.pBackground = new BackgroundElements();
		this.pScenario = new ScenarioElements();
		this.pNormal_Scenario = new Normal_ScenarioElements();
		this.pScenario_Outline = new Scenario_OutlineElements();
		this.pExamples = new ExamplesElements();
		this.pExamples_row = new Examples_rowElements();
		this.pRule = new RuleElements();
		this.pExample = new ExampleElements();
		this.pChain_Steps = new Chain_StepsElements();
		this.pSteps = new StepsElements();
		this.pGiven_Statement = new Given_StatementElements();
		this.pWhen_Statement = new When_StatementElements();
		this.pThen_Statement = new Then_StatementElements();
		this.pBut_Statement = new But_StatementElements();
		this.pAnd_Statement = new And_StatementElements();
		this.pStar_Statement = new Star_StatementElements();
		this.pDescription = new DescriptionElements();
		this.pSent = new SentElements();
		this.pSentence = new SentenceElements();
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "mde.coursework.gherkin.Gherkin.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("mde.coursework.gherkin.Gherkin".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Gherkin_Language:
	//	features+=Feature* | rules+=Rule*;
	public Gherkin_LanguageElements getGherkin_LanguageAccess() {
		return pGherkin_Language;
	}
	
	public ParserRule getGherkin_LanguageRule() {
		return getGherkin_LanguageAccess().getRule();
	}
	
	//Feature:
	//	"Feature:" Description (BEGIN
	//	feature_background=Background?
	//	scenarios+=Scenario+
	//	END)?;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//Background:
	//	title="Background:" (BEGIN
	//	background_Steps+=Steps*
	//	END);
	public BackgroundElements getBackgroundAccess() {
		return pBackground;
	}
	
	public ParserRule getBackgroundRule() {
		return getBackgroundAccess().getRule();
	}
	
	//Scenario:
	//	Normal_Scenario | Scenario_Outline;
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//Normal_Scenario:
	//	"Scenario:" Description
	//	scenario_steps=Chain_Steps;
	public Normal_ScenarioElements getNormal_ScenarioAccess() {
		return pNormal_Scenario;
	}
	
	public ParserRule getNormal_ScenarioRule() {
		return getNormal_ScenarioAccess().getRule();
	}
	
	//Scenario_Outline:
	//	"Scenario Outline:" Description (BEGIN
	//	steps+=Steps*
	//	example=Examples
	//	END);
	public Scenario_OutlineElements getScenario_OutlineAccess() {
		return pScenario_Outline;
	}
	
	public ParserRule getScenario_OutlineRule() {
		return getScenario_OutlineAccess().getRule();
	}
	
	//Examples:
	//	{Examples}
	//	"Examples:" (BEGIN
	//	rows+=Examples_row+
	//	END);
	public ExamplesElements getExamplesAccess() {
		return pExamples;
	}
	
	public ParserRule getExamplesRule() {
		return getExamplesAccess().getRule();
	}
	
	//Examples_row:
	//	("|" ID)+ "|";
	public Examples_rowElements getExamples_rowAccess() {
		return pExamples_row;
	}
	
	public ParserRule getExamples_rowRule() {
		return getExamples_rowAccess().getRule();
	}
	
	//Rule:
	//	"Rule:" Description (BEGIN
	//	background=Background?
	//	examples+=Example+
	//	END)?;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//Example:
	//	"Example:" Description
	//	example_steps=Chain_Steps;
	public ExampleElements getExampleAccess() {
		return pExample;
	}
	
	public ParserRule getExampleRule() {
		return getExampleAccess().getRule();
	}
	
	//Chain_Steps:
	//	{Chain_Steps} (BEGIN
	//	chain+=Steps*
	//	END);
	public Chain_StepsElements getChain_StepsAccess() {
		return pChain_Steps;
	}
	
	public ParserRule getChain_StepsRule() {
		return getChain_StepsAccess().getRule();
	}
	
	//Steps:
	//	given_step=Given_Statement | when_step=When_Statement | but_step=But_Statement | then_step=Then_Statement |
	//	and_step=And_Statement | star_step=Star_Statement;
	public StepsElements getStepsAccess() {
		return pSteps;
	}
	
	public ParserRule getStepsRule() {
		return getStepsAccess().getRule();
	}
	
	//Given_Statement:
	//	"Given" desc=Description;
	public Given_StatementElements getGiven_StatementAccess() {
		return pGiven_Statement;
	}
	
	public ParserRule getGiven_StatementRule() {
		return getGiven_StatementAccess().getRule();
	}
	
	//When_Statement:
	//	"When" desc=Description;
	public When_StatementElements getWhen_StatementAccess() {
		return pWhen_Statement;
	}
	
	public ParserRule getWhen_StatementRule() {
		return getWhen_StatementAccess().getRule();
	}
	
	//Then_Statement:
	//	"Then" desc=Description;
	public Then_StatementElements getThen_StatementAccess() {
		return pThen_Statement;
	}
	
	public ParserRule getThen_StatementRule() {
		return getThen_StatementAccess().getRule();
	}
	
	//But_Statement:
	//	"But" desc=Description;
	public But_StatementElements getBut_StatementAccess() {
		return pBut_Statement;
	}
	
	public ParserRule getBut_StatementRule() {
		return getBut_StatementAccess().getRule();
	}
	
	//And_Statement:
	//	"And" desc=Description;
	public And_StatementElements getAnd_StatementAccess() {
		return pAnd_Statement;
	}
	
	public ParserRule getAnd_StatementRule() {
		return getAnd_StatementAccess().getRule();
	}
	
	//Star_Statement:
	//	"*" desc=Description;
	public Star_StatementElements getStar_StatementAccess() {
		return pStar_Statement;
	}
	
	public ParserRule getStar_StatementRule() {
		return getStar_StatementAccess().getRule();
	}
	
	//Description:
	//	{Description} desc+=Sentence*;
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//Sent:
	//	{Sent} desc+=Sentence*;
	public SentElements getSentAccess() {
		return pSent;
	}
	
	public ParserRule getSentRule() {
		return getSentAccess().getRule();
	}
	
	//Sentence:
	//	ID | "\b" | STRING;
	public SentenceElements getSentenceAccess() {
		return pSentence;
	}
	
	public ParserRule getSentenceRule() {
		return getSentenceAccess().getRule();
	}
	
	//terminal BEGIN:
	//	'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END:
	//	'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
