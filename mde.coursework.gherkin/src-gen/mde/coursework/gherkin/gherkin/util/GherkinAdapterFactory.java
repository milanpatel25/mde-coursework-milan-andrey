/**
 * generated by Xtext 2.24.0
 */
package mde.coursework.gherkin.gherkin.util;

import mde.coursework.gherkin.gherkin.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see mde.coursework.gherkin.gherkin.GherkinPackage
 * @generated
 */
public class GherkinAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GherkinPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GherkinAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = GherkinPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GherkinSwitch<Adapter> modelSwitch =
    new GherkinSwitch<Adapter>()
    {
      @Override
      public Adapter caseGherkin_Language(Gherkin_Language object)
      {
        return createGherkin_LanguageAdapter();
      }
      @Override
      public Adapter caseFeature(Feature object)
      {
        return createFeatureAdapter();
      }
      @Override
      public Adapter caseBackground(Background object)
      {
        return createBackgroundAdapter();
      }
      @Override
      public Adapter caseScenario(Scenario object)
      {
        return createScenarioAdapter();
      }
      @Override
      public Adapter caseNormal_Scenario(Normal_Scenario object)
      {
        return createNormal_ScenarioAdapter();
      }
      @Override
      public Adapter caseScenario_Outline(Scenario_Outline object)
      {
        return createScenario_OutlineAdapter();
      }
      @Override
      public Adapter caseExamples(Examples object)
      {
        return createExamplesAdapter();
      }
      @Override
      public Adapter caseRule(Rule object)
      {
        return createRuleAdapter();
      }
      @Override
      public Adapter caseExample(Example object)
      {
        return createExampleAdapter();
      }
      @Override
      public Adapter caseChain_Steps(Chain_Steps object)
      {
        return createChain_StepsAdapter();
      }
      @Override
      public Adapter caseSteps(Steps object)
      {
        return createStepsAdapter();
      }
      @Override
      public Adapter caseGiven_Statement(Given_Statement object)
      {
        return createGiven_StatementAdapter();
      }
      @Override
      public Adapter caseWhen_Statement(When_Statement object)
      {
        return createWhen_StatementAdapter();
      }
      @Override
      public Adapter caseThen_Statement(Then_Statement object)
      {
        return createThen_StatementAdapter();
      }
      @Override
      public Adapter caseBut_Statement(But_Statement object)
      {
        return createBut_StatementAdapter();
      }
      @Override
      public Adapter caseAnd_Statement(And_Statement object)
      {
        return createAnd_StatementAdapter();
      }
      @Override
      public Adapter caseStar_Statement(Star_Statement object)
      {
        return createStar_StatementAdapter();
      }
      @Override
      public Adapter caseDescription(Description object)
      {
        return createDescriptionAdapter();
      }
      @Override
      public Adapter caseSent(Sent object)
      {
        return createSentAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Gherkin_Language <em>Gherkin Language</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Gherkin_Language
   * @generated
   */
  public Adapter createGherkin_LanguageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Feature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Feature
   * @generated
   */
  public Adapter createFeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Background <em>Background</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Background
   * @generated
   */
  public Adapter createBackgroundAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Scenario <em>Scenario</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Scenario
   * @generated
   */
  public Adapter createScenarioAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Normal_Scenario <em>Normal Scenario</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Normal_Scenario
   * @generated
   */
  public Adapter createNormal_ScenarioAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Scenario_Outline <em>Scenario Outline</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Scenario_Outline
   * @generated
   */
  public Adapter createScenario_OutlineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Examples <em>Examples</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Examples
   * @generated
   */
  public Adapter createExamplesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Rule
   * @generated
   */
  public Adapter createRuleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Example <em>Example</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Example
   * @generated
   */
  public Adapter createExampleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Chain_Steps <em>Chain Steps</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Chain_Steps
   * @generated
   */
  public Adapter createChain_StepsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Steps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Steps
   * @generated
   */
  public Adapter createStepsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Given_Statement <em>Given Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Given_Statement
   * @generated
   */
  public Adapter createGiven_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.When_Statement <em>When Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.When_Statement
   * @generated
   */
  public Adapter createWhen_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Then_Statement <em>Then Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Then_Statement
   * @generated
   */
  public Adapter createThen_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.But_Statement <em>But Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.But_Statement
   * @generated
   */
  public Adapter createBut_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.And_Statement <em>And Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.And_Statement
   * @generated
   */
  public Adapter createAnd_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Star_Statement <em>Star Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Star_Statement
   * @generated
   */
  public Adapter createStar_StatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Description <em>Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Description
   * @generated
   */
  public Adapter createDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link mde.coursework.gherkin.gherkin.Sent <em>Sent</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see mde.coursework.gherkin.gherkin.Sent
   * @generated
   */
  public Adapter createSentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //GherkinAdapterFactory
