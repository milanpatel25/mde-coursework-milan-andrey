/**
 * generated by Xtext 2.24.0
 */
package mde.coursework.gherkin.gherkin.impl;

import mde.coursework.gherkin.gherkin.And_Statement;
import mde.coursework.gherkin.gherkin.But_Statement;
import mde.coursework.gherkin.gherkin.GherkinPackage;
import mde.coursework.gherkin.gherkin.Given_Statement;
import mde.coursework.gherkin.gherkin.Star_Statement;
import mde.coursework.gherkin.gherkin.Steps;
import mde.coursework.gherkin.gherkin.Then_Statement;
import mde.coursework.gherkin.gherkin.When_Statement;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Steps</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getGiven_step <em>Given step</em>}</li>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getWhen_step <em>When step</em>}</li>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getBut_step <em>But step</em>}</li>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getThen_step <em>Then step</em>}</li>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getAnd_step <em>And step</em>}</li>
 *   <li>{@link mde.coursework.gherkin.gherkin.impl.StepsImpl#getStar_step <em>Star step</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StepsImpl extends MinimalEObjectImpl.Container implements Steps
{
  /**
   * The cached value of the '{@link #getGiven_step() <em>Given step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGiven_step()
   * @generated
   * @ordered
   */
  protected Given_Statement given_step;

  /**
   * The cached value of the '{@link #getWhen_step() <em>When step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhen_step()
   * @generated
   * @ordered
   */
  protected When_Statement when_step;

  /**
   * The cached value of the '{@link #getBut_step() <em>But step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBut_step()
   * @generated
   * @ordered
   */
  protected But_Statement but_step;

  /**
   * The cached value of the '{@link #getThen_step() <em>Then step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThen_step()
   * @generated
   * @ordered
   */
  protected Then_Statement then_step;

  /**
   * The cached value of the '{@link #getAnd_step() <em>And step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnd_step()
   * @generated
   * @ordered
   */
  protected And_Statement and_step;

  /**
   * The cached value of the '{@link #getStar_step() <em>Star step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStar_step()
   * @generated
   * @ordered
   */
  protected Star_Statement star_step;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StepsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GherkinPackage.Literals.STEPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Given_Statement getGiven_step()
  {
    return given_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGiven_step(Given_Statement newGiven_step, NotificationChain msgs)
  {
    Given_Statement oldGiven_step = given_step;
    given_step = newGiven_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__GIVEN_STEP, oldGiven_step, newGiven_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGiven_step(Given_Statement newGiven_step)
  {
    if (newGiven_step != given_step)
    {
      NotificationChain msgs = null;
      if (given_step != null)
        msgs = ((InternalEObject)given_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__GIVEN_STEP, null, msgs);
      if (newGiven_step != null)
        msgs = ((InternalEObject)newGiven_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__GIVEN_STEP, null, msgs);
      msgs = basicSetGiven_step(newGiven_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__GIVEN_STEP, newGiven_step, newGiven_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public When_Statement getWhen_step()
  {
    return when_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhen_step(When_Statement newWhen_step, NotificationChain msgs)
  {
    When_Statement oldWhen_step = when_step;
    when_step = newWhen_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__WHEN_STEP, oldWhen_step, newWhen_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhen_step(When_Statement newWhen_step)
  {
    if (newWhen_step != when_step)
    {
      NotificationChain msgs = null;
      if (when_step != null)
        msgs = ((InternalEObject)when_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__WHEN_STEP, null, msgs);
      if (newWhen_step != null)
        msgs = ((InternalEObject)newWhen_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__WHEN_STEP, null, msgs);
      msgs = basicSetWhen_step(newWhen_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__WHEN_STEP, newWhen_step, newWhen_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public But_Statement getBut_step()
  {
    return but_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBut_step(But_Statement newBut_step, NotificationChain msgs)
  {
    But_Statement oldBut_step = but_step;
    but_step = newBut_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__BUT_STEP, oldBut_step, newBut_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBut_step(But_Statement newBut_step)
  {
    if (newBut_step != but_step)
    {
      NotificationChain msgs = null;
      if (but_step != null)
        msgs = ((InternalEObject)but_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__BUT_STEP, null, msgs);
      if (newBut_step != null)
        msgs = ((InternalEObject)newBut_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__BUT_STEP, null, msgs);
      msgs = basicSetBut_step(newBut_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__BUT_STEP, newBut_step, newBut_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Then_Statement getThen_step()
  {
    return then_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThen_step(Then_Statement newThen_step, NotificationChain msgs)
  {
    Then_Statement oldThen_step = then_step;
    then_step = newThen_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__THEN_STEP, oldThen_step, newThen_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThen_step(Then_Statement newThen_step)
  {
    if (newThen_step != then_step)
    {
      NotificationChain msgs = null;
      if (then_step != null)
        msgs = ((InternalEObject)then_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__THEN_STEP, null, msgs);
      if (newThen_step != null)
        msgs = ((InternalEObject)newThen_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__THEN_STEP, null, msgs);
      msgs = basicSetThen_step(newThen_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__THEN_STEP, newThen_step, newThen_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public And_Statement getAnd_step()
  {
    return and_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAnd_step(And_Statement newAnd_step, NotificationChain msgs)
  {
    And_Statement oldAnd_step = and_step;
    and_step = newAnd_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__AND_STEP, oldAnd_step, newAnd_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAnd_step(And_Statement newAnd_step)
  {
    if (newAnd_step != and_step)
    {
      NotificationChain msgs = null;
      if (and_step != null)
        msgs = ((InternalEObject)and_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__AND_STEP, null, msgs);
      if (newAnd_step != null)
        msgs = ((InternalEObject)newAnd_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__AND_STEP, null, msgs);
      msgs = basicSetAnd_step(newAnd_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__AND_STEP, newAnd_step, newAnd_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Star_Statement getStar_step()
  {
    return star_step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStar_step(Star_Statement newStar_step, NotificationChain msgs)
  {
    Star_Statement oldStar_step = star_step;
    star_step = newStar_step;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__STAR_STEP, oldStar_step, newStar_step);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStar_step(Star_Statement newStar_step)
  {
    if (newStar_step != star_step)
    {
      NotificationChain msgs = null;
      if (star_step != null)
        msgs = ((InternalEObject)star_step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__STAR_STEP, null, msgs);
      if (newStar_step != null)
        msgs = ((InternalEObject)newStar_step).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GherkinPackage.STEPS__STAR_STEP, null, msgs);
      msgs = basicSetStar_step(newStar_step, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GherkinPackage.STEPS__STAR_STEP, newStar_step, newStar_step));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GherkinPackage.STEPS__GIVEN_STEP:
        return basicSetGiven_step(null, msgs);
      case GherkinPackage.STEPS__WHEN_STEP:
        return basicSetWhen_step(null, msgs);
      case GherkinPackage.STEPS__BUT_STEP:
        return basicSetBut_step(null, msgs);
      case GherkinPackage.STEPS__THEN_STEP:
        return basicSetThen_step(null, msgs);
      case GherkinPackage.STEPS__AND_STEP:
        return basicSetAnd_step(null, msgs);
      case GherkinPackage.STEPS__STAR_STEP:
        return basicSetStar_step(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GherkinPackage.STEPS__GIVEN_STEP:
        return getGiven_step();
      case GherkinPackage.STEPS__WHEN_STEP:
        return getWhen_step();
      case GherkinPackage.STEPS__BUT_STEP:
        return getBut_step();
      case GherkinPackage.STEPS__THEN_STEP:
        return getThen_step();
      case GherkinPackage.STEPS__AND_STEP:
        return getAnd_step();
      case GherkinPackage.STEPS__STAR_STEP:
        return getStar_step();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GherkinPackage.STEPS__GIVEN_STEP:
        setGiven_step((Given_Statement)newValue);
        return;
      case GherkinPackage.STEPS__WHEN_STEP:
        setWhen_step((When_Statement)newValue);
        return;
      case GherkinPackage.STEPS__BUT_STEP:
        setBut_step((But_Statement)newValue);
        return;
      case GherkinPackage.STEPS__THEN_STEP:
        setThen_step((Then_Statement)newValue);
        return;
      case GherkinPackage.STEPS__AND_STEP:
        setAnd_step((And_Statement)newValue);
        return;
      case GherkinPackage.STEPS__STAR_STEP:
        setStar_step((Star_Statement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GherkinPackage.STEPS__GIVEN_STEP:
        setGiven_step((Given_Statement)null);
        return;
      case GherkinPackage.STEPS__WHEN_STEP:
        setWhen_step((When_Statement)null);
        return;
      case GherkinPackage.STEPS__BUT_STEP:
        setBut_step((But_Statement)null);
        return;
      case GherkinPackage.STEPS__THEN_STEP:
        setThen_step((Then_Statement)null);
        return;
      case GherkinPackage.STEPS__AND_STEP:
        setAnd_step((And_Statement)null);
        return;
      case GherkinPackage.STEPS__STAR_STEP:
        setStar_step((Star_Statement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GherkinPackage.STEPS__GIVEN_STEP:
        return given_step != null;
      case GherkinPackage.STEPS__WHEN_STEP:
        return when_step != null;
      case GherkinPackage.STEPS__BUT_STEP:
        return but_step != null;
      case GherkinPackage.STEPS__THEN_STEP:
        return then_step != null;
      case GherkinPackage.STEPS__AND_STEP:
        return and_step != null;
      case GherkinPackage.STEPS__STAR_STEP:
        return star_step != null;
    }
    return super.eIsSet(featureID);
  }

} //StepsImpl
