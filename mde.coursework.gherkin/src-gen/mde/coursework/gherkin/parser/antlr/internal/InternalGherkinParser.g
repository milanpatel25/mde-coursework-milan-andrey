/*
 * generated by Xtext 2.24.0
 */
parser grammar InternalGherkinParser;

options {
	tokenVocab=InternalGherkinLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package mde.coursework.gherkin.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mde.coursework.gherkin.services.GherkinGrammarAccess;

}

@members {

 	private GherkinGrammarAccess grammarAccess;

    public InternalGherkinParser(TokenStream input, GherkinGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Gherkin_Language";
   	}

   	@Override
   	protected GherkinGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGherkin_Language
entryRuleGherkin_Language returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGherkin_LanguageRule()); }
	iv_ruleGherkin_Language=ruleGherkin_Language
	{ $current=$iv_ruleGherkin_Language.current; }
	EOF;

// Rule Gherkin_Language
ruleGherkin_Language returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGherkin_LanguageAccess().getFeaturesFeatureParserRuleCall_0_0());
				}
				lv_features_0_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGherkin_LanguageRule());
					}
					add(
						$current,
						"features",
						lv_features_0_0,
						"mde.coursework.gherkin.Gherkin.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getGherkin_LanguageAccess().getRulesRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGherkin_LanguageRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"mde.coursework.gherkin.Gherkin.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Feature
		{
			newLeafNode(otherlv_0, grammarAccess.getFeatureAccess().getFeatureKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getDescriptionParserRuleCall_1());
		}
		this_Description_1=ruleDescription
		{
			$current = $this_Description_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			this_BEGIN_2=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_2, grammarAccess.getFeatureAccess().getBEGINTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureAccess().getFeature_backgroundBackgroundParserRuleCall_2_1_0());
					}
					lv_feature_background_3_0=ruleBackground
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureRule());
						}
						set(
							$current,
							"feature_background",
							lv_feature_background_3_0,
							"mde.coursework.gherkin.Gherkin.Background");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_2_2_0());
					}
					lv_scenarios_4_0=ruleScenario
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFeatureRule());
						}
						add(
							$current,
							"scenarios",
							lv_scenarios_4_0,
							"mde.coursework.gherkin.Gherkin.Scenario");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_5=RULE_END
			{
				newLeafNode(this_END_5, grammarAccess.getFeatureAccess().getENDTerminalRuleCall_2_3());
			}
		)?
	)
;

// Entry rule entryRuleBackground
entryRuleBackground returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackgroundRule()); }
	iv_ruleBackground=ruleBackground
	{ $current=$iv_ruleBackground.current; }
	EOF;

// Rule Background
ruleBackground returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_title_0_0=Background
				{
					newLeafNode(lv_title_0_0, grammarAccess.getBackgroundAccess().getTitleBackgroundKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackgroundRule());
					}
					setWithLastConsumed($current, "title", lv_title_0_0, "Background:");
				}
			)
		)
		(
			this_BEGIN_1=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_1, grammarAccess.getBackgroundAccess().getBEGINTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBackgroundAccess().getBackground_StepsStepsParserRuleCall_1_1_0());
					}
					lv_background_Steps_2_0=ruleSteps
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBackgroundRule());
						}
						add(
							$current,
							"background_Steps",
							lv_background_Steps_2_0,
							"mde.coursework.gherkin.Gherkin.Steps");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_3=RULE_END
			{
				newLeafNode(this_END_3, grammarAccess.getBackgroundAccess().getENDTerminalRuleCall_1_2());
			}
		)
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getScenarioAccess().getNormal_ScenarioParserRuleCall_0());
		}
		this_Normal_Scenario_0=ruleNormal_Scenario
		{
			$current = $this_Normal_Scenario_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getScenarioAccess().getScenario_OutlineParserRuleCall_1());
		}
		this_Scenario_Outline_1=ruleScenario_Outline
		{
			$current = $this_Scenario_Outline_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNormal_Scenario
entryRuleNormal_Scenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNormal_ScenarioRule()); }
	iv_ruleNormal_Scenario=ruleNormal_Scenario
	{ $current=$iv_ruleNormal_Scenario.current; }
	EOF;

// Rule Normal_Scenario
ruleNormal_Scenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Scenario
		{
			newLeafNode(otherlv_0, grammarAccess.getNormal_ScenarioAccess().getScenarioKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getNormal_ScenarioAccess().getDescriptionParserRuleCall_1());
		}
		this_Description_1=ruleDescription
		{
			$current = $this_Description_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNormal_ScenarioAccess().getScenario_stepsChain_StepsParserRuleCall_2_0());
				}
				lv_scenario_steps_2_0=ruleChain_Steps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNormal_ScenarioRule());
					}
					set(
						$current,
						"scenario_steps",
						lv_scenario_steps_2_0,
						"mde.coursework.gherkin.Gherkin.Chain_Steps");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleScenario_Outline
entryRuleScenario_Outline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenario_OutlineRule()); }
	iv_ruleScenario_Outline=ruleScenario_Outline
	{ $current=$iv_ruleScenario_Outline.current; }
	EOF;

// Rule Scenario_Outline
ruleScenario_Outline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=ScenarioOutline
		{
			newLeafNode(otherlv_0, grammarAccess.getScenario_OutlineAccess().getScenarioOutlineKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getScenario_OutlineAccess().getDescriptionParserRuleCall_1());
		}
		this_Description_1=ruleDescription
		{
			$current = $this_Description_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			this_BEGIN_2=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_2, grammarAccess.getScenario_OutlineAccess().getBEGINTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScenario_OutlineAccess().getStepsStepsParserRuleCall_2_1_0());
					}
					lv_steps_3_0=ruleSteps
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenario_OutlineRule());
						}
						add(
							$current,
							"steps",
							lv_steps_3_0,
							"mde.coursework.gherkin.Gherkin.Steps");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getScenario_OutlineAccess().getExampleExamplesParserRuleCall_2_2_0());
					}
					lv_example_4_0=ruleExamples
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScenario_OutlineRule());
						}
						set(
							$current,
							"example",
							lv_example_4_0,
							"mde.coursework.gherkin.Gherkin.Examples");
						afterParserOrEnumRuleCall();
					}
				)
			)
			this_END_5=RULE_END
			{
				newLeafNode(this_END_5, grammarAccess.getScenario_OutlineAccess().getENDTerminalRuleCall_2_3());
			}
		)
	)
;

// Entry rule entryRuleExamples
entryRuleExamples returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExamplesRule()); }
	iv_ruleExamples=ruleExamples
	{ $current=$iv_ruleExamples.current; }
	EOF;

// Rule Examples
ruleExamples returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExamplesAccess().getExamplesAction_0(),
					$current);
			}
		)
		otherlv_1=Examples
		{
			newLeafNode(otherlv_1, grammarAccess.getExamplesAccess().getExamplesKeyword_1());
		}
		(
			this_BEGIN_2=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_2, grammarAccess.getExamplesAccess().getBEGINTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExamplesAccess().getRowsExamples_rowParserRuleCall_2_1_0());
					}
					lv_rows_3_0=ruleExamples_row
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExamplesRule());
						}
						add(
							$current,
							"rows",
							lv_rows_3_0,
							"mde.coursework.gherkin.Gherkin.Examples_row");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_4=RULE_END
			{
				newLeafNode(this_END_4, grammarAccess.getExamplesAccess().getENDTerminalRuleCall_2_2());
			}
		)
	)
;

// Entry rule entryRuleExamples_row
entryRuleExamples_row returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExamples_rowRule()); }
	iv_ruleExamples_row=ruleExamples_row
	{ $current=$iv_ruleExamples_row.current.getText(); }
	EOF;

// Rule Examples_row
ruleExamples_row returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw=VerticalLine
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_0_0());
			}
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getExamples_rowAccess().getIDTerminalRuleCall_0_1());
			}
		)+
		kw=VerticalLine
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExamples_rowAccess().getVerticalLineKeyword_1());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Rule
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getDescriptionParserRuleCall_1());
		}
		this_Description_1=ruleDescription
		{
			$current = $this_Description_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			this_BEGIN_2=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_2, grammarAccess.getRuleAccess().getBEGINTerminalRuleCall_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getBackgroundBackgroundParserRuleCall_2_1_0());
					}
					lv_background_3_0=ruleBackground
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						set(
							$current,
							"background",
							lv_background_3_0,
							"mde.coursework.gherkin.Gherkin.Background");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getExamplesExampleParserRuleCall_2_2_0());
					}
					lv_examples_4_0=ruleExample
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"examples",
							lv_examples_4_0,
							"mde.coursework.gherkin.Gherkin.Example");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_5=RULE_END
			{
				newLeafNode(this_END_5, grammarAccess.getRuleAccess().getENDTerminalRuleCall_2_3());
			}
		)?
	)
;

// Entry rule entryRuleExample
entryRuleExample returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExampleRule()); }
	iv_ruleExample=ruleExample
	{ $current=$iv_ruleExample.current; }
	EOF;

// Rule Example
ruleExample returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Example
		{
			newLeafNode(otherlv_0, grammarAccess.getExampleAccess().getExampleKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getExampleAccess().getDescriptionParserRuleCall_1());
		}
		this_Description_1=ruleDescription
		{
			$current = $this_Description_1.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExampleAccess().getExample_stepsChain_StepsParserRuleCall_2_0());
				}
				lv_example_steps_2_0=ruleChain_Steps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExampleRule());
					}
					set(
						$current,
						"example_steps",
						lv_example_steps_2_0,
						"mde.coursework.gherkin.Gherkin.Chain_Steps");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChain_Steps
entryRuleChain_Steps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChain_StepsRule()); }
	iv_ruleChain_Steps=ruleChain_Steps
	{ $current=$iv_ruleChain_Steps.current; }
	EOF;

// Rule Chain_Steps
ruleChain_Steps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getChain_StepsAccess().getChain_StepsAction_0(),
					$current);
			}
		)
		(
			this_BEGIN_1=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_1, grammarAccess.getChain_StepsAccess().getBEGINTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChain_StepsAccess().getChainStepsParserRuleCall_1_1_0());
					}
					lv_chain_2_0=ruleSteps
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChain_StepsRule());
						}
						add(
							$current,
							"chain",
							lv_chain_2_0,
							"mde.coursework.gherkin.Gherkin.Steps");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_3=RULE_END
			{
				newLeafNode(this_END_3, grammarAccess.getChain_StepsAccess().getENDTerminalRuleCall_1_2());
			}
		)
	)
;

// Entry rule entryRuleSteps
entryRuleSteps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepsRule()); }
	iv_ruleSteps=ruleSteps
	{ $current=$iv_ruleSteps.current; }
	EOF;

// Rule Steps
ruleSteps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getGiven_stepGiven_StatementParserRuleCall_0_0());
				}
				lv_given_step_0_0=ruleGiven_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"given_step",
						lv_given_step_0_0,
						"mde.coursework.gherkin.Gherkin.Given_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getWhen_stepWhen_StatementParserRuleCall_1_0());
				}
				lv_when_step_1_0=ruleWhen_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"when_step",
						lv_when_step_1_0,
						"mde.coursework.gherkin.Gherkin.When_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getBut_stepBut_StatementParserRuleCall_2_0());
				}
				lv_but_step_2_0=ruleBut_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"but_step",
						lv_but_step_2_0,
						"mde.coursework.gherkin.Gherkin.But_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getThen_stepThen_StatementParserRuleCall_3_0());
				}
				lv_then_step_3_0=ruleThen_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"then_step",
						lv_then_step_3_0,
						"mde.coursework.gherkin.Gherkin.Then_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getAnd_stepAnd_StatementParserRuleCall_4_0());
				}
				lv_and_step_4_0=ruleAnd_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"and_step",
						lv_and_step_4_0,
						"mde.coursework.gherkin.Gherkin.And_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStepsAccess().getStar_stepStar_StatementParserRuleCall_5_0());
				}
				lv_star_step_5_0=ruleStar_Statement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStepsRule());
					}
					set(
						$current,
						"star_step",
						lv_star_step_5_0,
						"mde.coursework.gherkin.Gherkin.Star_Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGiven_Statement
entryRuleGiven_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGiven_StatementRule()); }
	iv_ruleGiven_Statement=ruleGiven_Statement
	{ $current=$iv_ruleGiven_Statement.current; }
	EOF;

// Rule Given_Statement
ruleGiven_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Given
		{
			newLeafNode(otherlv_0, grammarAccess.getGiven_StatementAccess().getGivenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGiven_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGiven_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhen_Statement
entryRuleWhen_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhen_StatementRule()); }
	iv_ruleWhen_Statement=ruleWhen_Statement
	{ $current=$iv_ruleWhen_Statement.current; }
	EOF;

// Rule When_Statement
ruleWhen_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=When
		{
			newLeafNode(otherlv_0, grammarAccess.getWhen_StatementAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhen_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhen_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleThen_Statement
entryRuleThen_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThen_StatementRule()); }
	iv_ruleThen_Statement=ruleThen_Statement
	{ $current=$iv_ruleThen_Statement.current; }
	EOF;

// Rule Then_Statement
ruleThen_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Then
		{
			newLeafNode(otherlv_0, grammarAccess.getThen_StatementAccess().getThenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThen_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThen_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBut_Statement
entryRuleBut_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBut_StatementRule()); }
	iv_ruleBut_Statement=ruleBut_Statement
	{ $current=$iv_ruleBut_Statement.current; }
	EOF;

// Rule But_Statement
ruleBut_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=But
		{
			newLeafNode(otherlv_0, grammarAccess.getBut_StatementAccess().getButKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBut_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBut_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAnd_Statement
entryRuleAnd_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnd_StatementRule()); }
	iv_ruleAnd_Statement=ruleAnd_Statement
	{ $current=$iv_ruleAnd_Statement.current; }
	EOF;

// Rule And_Statement
ruleAnd_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=And
		{
			newLeafNode(otherlv_0, grammarAccess.getAnd_StatementAccess().getAndKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnd_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnd_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStar_Statement
entryRuleStar_Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStar_StatementRule()); }
	iv_ruleStar_Statement=ruleStar_Statement
	{ $current=$iv_ruleStar_Statement.current; }
	EOF;

// Rule Star_Statement
ruleStar_Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Asterisk
		{
			newLeafNode(otherlv_0, grammarAccess.getStar_StatementAccess().getAsteriskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStar_StatementAccess().getDescDescriptionParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStar_StatementRule());
					}
					set(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current; }
	EOF;

// Rule Description
ruleDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDescriptionAccess().getDescriptionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDescriptionAccess().getDescSentenceParserRuleCall_1_0());
				}
				lv_desc_1_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDescriptionRule());
					}
					add(
						$current,
						"desc",
						lv_desc_1_0,
						"mde.coursework.gherkin.Gherkin.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current.getText(); }
	EOF;

// Rule Sentence
ruleSentence returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getSentenceAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw=Backspace
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSentenceAccess().getBackspaceKeyword_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getSentenceAccess().getSTRINGTerminalRuleCall_2());
		}
	)
;
